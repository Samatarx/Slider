[{"C:\\Users\\samat\\OneDrive\\Documents\\Coding\\React\\React - Smilga course\\React Projects\\slider\\src\\index.js":"1","C:\\Users\\samat\\OneDrive\\Documents\\Coding\\React\\React - Smilga course\\React Projects\\slider\\src\\App.js":"2","C:\\Users\\samat\\OneDrive\\Documents\\Coding\\React\\React - Smilga course\\React Projects\\slider\\src\\data.js":"3"},{"size":219,"mtime":1612367174156,"results":"4","hashOfConfig":"5"},{"size":2280,"mtime":1612367733479,"results":"6","hashOfConfig":"5"},{"size":1431,"mtime":1612367175461,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"130fka7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\samat\\OneDrive\\Documents\\Coding\\React\\React - Smilga course\\React Projects\\slider\\src\\index.js",[],["16","17"],"C:\\Users\\samat\\OneDrive\\Documents\\Coding\\React\\React - Smilga course\\React Projects\\slider\\src\\App.js",["18"],"import React, { useState, useEffect } from \"react\";\nimport { FiChevronRight, FiChevronLeft } from \"react-icons/fi\";\nimport { FaQuoteRight } from \"react-icons/fa\";\nimport data from \"./data\";\n\nfunction App() {\n  const [people, setPeople] = useState(data);\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const lastIndex = people.length - 1;\n    if (index < 0) {\n      setIndex(lastIndex);\n    }\n    if (index > lastIndex) {\n      setIndex(0);\n    }\n  }, [index, people]);\n\n  useEffect(() => {\n    let slider = setInterval(() => {\n      setIndex(index + 1);\n    }, 5000);\n    return () => clearInterval(slider);\n  }, [index]);\n\n  return (\n    <section className=\"section\">\n      <div className=\"title\">\n        <h2>\n          <span>/</span>reviews\n        </h2>\n      </div>\n      <div className=\"section-center\">\n        {people.map((person, personIndex) => {\n          const { id, image, name, title, quote } = person;\n\n          let position = \"nextSlide\";\n          if (personIndex === index) {\n            position = \"activeSlide\";\n          }\n          if (\n            personIndex === index - 1 ||\n            (index === 0 && personIndex === people.length - 1)\n          ) {\n            position = \"lastSlide\";\n          }\n          return (\n            <article className={position} key={id}>\n              <img src={image} alt={name} className=\"person-img\" />\n              <h4>{name}</h4>\n              <p className=\"title\">{title}</p>\n              <p className=\"text\">{quote}</p>\n              <FaQuoteRight className=\"icon\" />\n            </article>\n          );\n        })}\n        <button className=\"prev\" onClick={() => setIndex(index - 1)}>\n          <FiChevronLeft />\n        </button>\n        <button className=\"next\" onClick={() => setIndex(index + 1)}>\n          <FiChevronRight />\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n\n/* <img src={image} alt=\"\" className=\"person-img\" />\n        <h4>{title}</h4>\n        <h3>{name}</h3>\n        <p>{quote}</p> */\n/* {buttons}\n      <button\n        onClick={() => {\n          nextImg();\n        }}\n      >\n        <FiChevronLeft />\n      </button>\n      <button\n        onClick={() => {\n          prevImg();\n        }}\n      >\n        <FiChevronRight />\n      </button> */\n","C:\\Users\\samat\\OneDrive\\Documents\\Coding\\React\\React - Smilga course\\React Projects\\slider\\src\\data.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":7,"column":18,"nodeType":"25","messageId":"26","endLine":7,"endColumn":27},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]